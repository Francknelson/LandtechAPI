require 'rails_helper'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to test the controller code that
# was generated by Rails when you ran the scaffold generator.
#
# It assumes that the implementation code is generated by the rails scaffold
# generator. If you are using any extension libraries to generate different
# controller code, this generated spec may or may not pass.
#
# It only uses APIs available in rails and/or rspec-rails. There are a number
# of tools you can use to make these specs even more expressive, but we're
# sticking to rails and rspec-rails APIs to keep things simple and stable.

RSpec.describe "/publica/submissions", type: :request do
  let(:valid_attributes) { attributes_for(:submission, job_id: create(:job).id) }

  let(:invalid_attributes) {  attributes_for(:submission, job_id: nil) }

  let(:valid_headers) {
    {}
  }

  describe "POST /create" do
    context "with valid parameters" do
      it "creates a new Publica::Submission" do
        expect {
          post publica_submissions_path,
               params: { publica_submission: valid_attributes }, headers: valid_headers, as: :json
        }.to change(Submission, :count).by(1)
      end

      it "renders a JSON response with the new publica_submission" do
        post publica_submissions_path,
             params: { publica_submission: valid_attributes }, headers: valid_headers, as: :json
        expect(response).to have_http_status(:created)
        expect(response.content_type).to match(/application\/json/)
      end
    end

    context "with invalid parameters" do
      it "does not create a new Publica::Submission" do
        expect {
          post publica_submissions_path,
               params: { publica_submission: invalid_attributes }, as: :json
        }.to change(Submission, :count).by(0)
      end

      it "renders a JSON response with errors for the new publica_submission" do
        post publica_submissions_path,
             params: { publica_submission: invalid_attributes }, headers: valid_headers, as: :json
        expect(response).to have_http_status(:unprocessable_entity)
        expect(response.content_type).to match(/application\/json/)
      end
    end
  end
end
